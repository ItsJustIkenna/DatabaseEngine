InsertStatement<schema::trades::table, ValuesClause<(DefaultableColumnInsertValue<ColumnInsertValue<schema::trades::columns::symbol, diesel::expression::bound::Bound<diesel::sql_types::Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::trades::columns::exchange, diesel::expression::bound::Bound<diesel::sql_types::Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::trades::columns::security_id, diesel::expression::bound::Bound<diesel::sql_types::Uuid, &uuid::Uuid>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::trades::columns::exchange_id, diesel::expression::bound::Bound<diesel::sql_types::Uuid, &uuid::Uuid>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::trades::columns::side, diesel::expression::bound::Bound<diesel::sql_types::Text, &std::string::String>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::trades::columns::price, diesel::expression::bound::Bound<diesel::sql_types::Numeric, &BigDecimal>>>, DefaultableColumnInsertValue<ColumnInsertValue<schema::trades::columns::quantity, diesel::expression::bound::Bound<diesel::sql_types::Numeric, &BigDecimal>>>), schema::trades::table>, query_builder::insert_statement::private::Insert, ReturningClause<diesel::expression::select_by::SelectBy<models::Trade, Pg>>>
